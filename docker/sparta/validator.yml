version: '3.7'
services:
  validator:
    init: true
    container_name: validator
    image: ghcr.io/polischain/polis-chains:main
    user: root
    network_mode: host
    volumes:
      - ../../passwords/:/nethermind/passwords
      - ../../db/:/nethermind/nethermind_db
      - ../../keystore/:/nethermind/keystore
      - ../../logs/:/nethermind/logs/
      - ./NLog.config:/nethermind/NLog.config
    environment:
      NETHERMIND_CONFIG: "sparta_validator"
      NETHERMIND_AURACONFIG_FORCESEALING: "true"
      NETHERMIND_AURACONFIG_ALLOWAURAPRIVATECHAINS: "true"
      NETHERMIND_ETHSTATSCONFIG_ENABLED: "true"
      NETHERMIND_ETHSTATSCONFIG_SECRET: "PhD8zsx69jhpqv7PUhzz2mExj66hT8tRknP7Rw7sCC5y79SAgQuZLW6cXUuqjRnv"
      NETHERMIND_ETHSTATSCONFIG_SERVER: "wss://sparta-stats.polis.tech/api"
      NETHERMIND_ETHSTATSCONFIG_NAME: $NAME
      NETHERMIND_INITCONFIG_ISMINING: "true"
      NETHERMIND_MININGCONFIG_ENABLED: "true"
      NETHERMIND_INITCONFIG_STORERECEIPTS: "false"
      NETHERMIND_MININGCONFIG_MINGASPRICE: "1000000000"
      NETHERMIND_MININGCONFIG_TARGETBLOCKGASLIMIT: "20000000"
      NETHERMIND_PRUNINGCONFIG_ENABLED: "false"
      NETHERMIND_SYNCCONFIG_FASTSYNC: "true"
      NETHERMIND_SYNCCONFIG_FASTBLOCKS: "true"
      NETHERMIND_SYNCCONFIG_DOWNLOADBODIESINFASTSYNC: "false"
      NETHERMIND_SYNCCONFIG_DOWNLOADRECEIPTSINFASTSYNC: "false"
      NETHERMIND_KEYSTORECONFIG_BLOCKAUTHORACCOUNT: $ACCOUNT
      NETHERMIND_KEYSTORECONFIG_UNLOCKACCOUNTS: "$ACCOUNT"
      NETHERMIND_KEYSTORECONFIG_PASSWORDFILES: /nethermind/passwords/$ACCOUNT
      NETHERMIND_HEALTHCHECKSCONFIG_ENABLED: "true"
      NETHERMIND_HEALTHCHECKSCONFIG_UIENABLED: "true"
      NETHERMIND_HEALTHCHECKSCONFIG_MAXINTERVALWITHOUTPROCESSEDBLOCK: 100
      NETHERMIND_HEALTHCHECKSCONFIG_MAXINTERVALWITHOUTPRODUCEDBLOCK: 100
      NETHERMIND_JSONRPCCONFIG_ENABLED: "true"
      NETHERMIND_METRICSCONFIG_ENABLED: "true"
      NETHERMIND_METRICSCONFIG_NODENAME: $NAME
    ports:
      - "8545"
      - "30303"
    restart: always

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention=200h'
      - '--web.enable-lifecycle'
    restart: always
    ports:
      - "9090:9090"
    networks:
      - metrics

  pushgateway:
    image: prom/pushgateway
    container_name: pushgateway
    restart: always
    ports:
      - "9091:9091"
    networks:
      - metrics

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: always
    ports:
      - "3000:3000"
    networks:
      - metrics
    volumes:
      - ./grafana/:/etc/grafana/provisioning/

  seq:
    image: datalust/seq:latest
    container_name: seq
    restart: always
    volumes:
      - "./seq/:/data"
    environment:
      ACCEPT_EULA: "Y"
    ports:
      - "5341:80"

networks:
  metrics:
    driver: bridge

volumes:
  prometheus_data: {}


